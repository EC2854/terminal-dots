#!/usr/bin/env bash

file=$1
w=$2
h=$3
x=$4
y=$5
thumbnail=~/.cache/lf/thumbnail.png # Set path to a temp image
max_lines=65  # Set the maximum number of lines to display
timeout_duration=1.3

get_file_mime_type() {
    file -Lb --mime-type "$1"
}

# generate_thumbnail() {
#     ffmpeg -y -i "$1" -vframes 1 -q:v 2 "$2" > /dev/null 2>&1
# }

# generate_spectogram() {
#    ffmpeg -y -i "$1" -lavfi "showspectrumpic=s=960x540:legend=1" "$2" > /dev/null 2>&1
# }

# show_image() {
#     kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$1" < /dev/null > /dev/tty
# }

# play_audio() {
#     mpv --no-video --really-quiet --no-terminal --force-window=no --input-terminal=no --volume=50 "$1" > /dev/null 2>&1 &
# }

show_code() {
    # timeout $timeout_duration bat --paging=never --style=numbers --theme=base16 --wrap=auto ==terminal-width "$((w-5))" -f "$1" | head -n $max_lines
    timeout $timeout_duration head -n $max_lines $1
}

show_pdf_tar_zip() {
    local command
    case $mime_type in
        application/pdf) command="pdftotext '$1' -";;
        application/zip) command="unzip -l '$1'";; 
        application/x*) command="tar -tf '$1'";;
    esac
    eval timeout $timeout_duration $command | head -n $max_lines
}

# Check the MIME type
mime_type=$(get_file_mime_type "$file")

case $mime_type in
    # image*)
    #     show_image "$file"
    #     ;;
    # video*)
    #     generate_thumbnail "$file" "$thumbnail"
    #     show_image "$thumbnail"
    #     ;;
    # audio*)
    #     play_audio "$file" &
    #     generate_spectogram "$file" "$thumbnail"
    #     show_image "$thumbnail"
    #     ;;
    application/pdf | application/zip | application/x*)
        show_pdf_tar_zip "$file"
        ;;
    *)
        show_code "$file"
        ;;
esac
exit 1
